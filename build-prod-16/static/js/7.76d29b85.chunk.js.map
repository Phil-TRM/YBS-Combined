{"version":3,"file":"static/js/7.76d29b85.chunk.js","mappings":"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","sources":["Pages/Register.js","Pages/SubscriptionOption.js","Pages/SubscriptionList.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Img1 from \"../Images/Doctors/doctor1.webp\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport { Checkbox, Modal, Typography } from \"@mui/material\";\r\nimport { CLIENT_ID, CheckExits, FILE_URL, Historyhandlers, JSON_HEADER, UserHandler, ANNUAL_PLAN, MONTHLY_PLAN } from \"../utils/Const\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserBasic, setUserData } from \"../Redux/Actions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nimport { handleNewCommunityUser } from \"../utils/CreateCommunityUserUtil\";\r\n\r\nimport SubscriptionList from './SubscriptionList';\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [designation, setDesignation] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [zipcode, setZipcode] = useState(\"\");\r\n  const [certificate, setCertificate] = useState(\"\");\r\n  const [streetAddress, setStreetAddress] = useState(\"\");\r\n  const [howFind, setHowFind] = useState(\"We Are Team\");\r\n  const [plan, setPlan] = useState(\"\");\r\n  const [prices, setPrices] = useState(new Array());\r\n  const [isTerms, setTerms] = useState(false);\r\n  const Dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  console.log(\"Loading\");\r\n\r\n  const [img, setImg] = useState(\"\");\r\n  const MasterData = useSelector((state) => state.handleMasterData);\r\n  const Basic = useSelector((state) => state.handleUserBasicData);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [orderID, setOrderID] = useState(false);\r\n  const [submitEnable, setSubmitEnable] = useState(false);\r\n\r\n\r\n  const [subscriptionStatus, setSubscriptionStatus] = useState(null);\r\n  const [subscriptionDetails, setSubscriptionDetails] = useState(null);\r\n\r\n  const handleSubscription = (details) => {\r\n    setSuccess(true);\r\n    setSubscriptionStatus(details);\r\n    setSubscriptionDetails(details);\r\n    \r\n    //setOrderID('6512ea7881d7720e2699a999');\r\n    //setPlan('6512ea7881d7720e2699a999')\r\n  }\r\n\r\n  let planId = null;\r\n\r\n  const initialOptions = {\r\n    \"client-id\": CLIENT_ID,\r\n    //\"enable-funding\": \"paylater,card\",\r\n    //\"disable-funding\": \"\",\r\n    //\"data-sdk-integration-source\": \"integrationbuilder_sc\",\r\n    \"vault\" : \"true\",\r\n    \"intent\" : \"subscription\",\r\n  };\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  // Function to open the modal\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (MasterData.signupData != null) {\r\n      setImg(FILE_URL + MasterData.signupData.pro);\r\n    }\r\n    if (MasterData.prices != null) {\r\n      setPrices(MasterData.prices);\r\n    } else {\r\n      setPrices(new Array());\r\n    }\r\n  }, [MasterData]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if(!submitEnable){\r\n      NotificationManager.warning(\"Account already exists please login\");\r\n      return\r\n    }\r\n    if (!isTerms) {\r\n      NotificationManager.warning(\"Please accept terms and condtions\");\r\n      return;\r\n    }\r\n\r\n    //if (plan == null) {\r\n    //  NotificationManager.warning(\"Please choase a plan\");\r\n    //  return;\r\n   // }\r\n    setShow(true);\r\n  };\r\n  const createOrder = (data, actions) => {\r\n\r\n    let desc, price;\r\n    for (let i = 0; i < prices.length; i++) {\r\n      const element = prices[i];\r\n      if(element._id == plan){\r\n        desc=element.validity>30?\"Yearly package\":\"Monthly package\";\r\n        price=element.price;\r\n      }\r\n      \r\n    }\r\n\r\n    return actions.order\r\n      .create({\r\n        purchase_units: [\r\n          {\r\n            description: desc,\r\n            amount: {\r\n              currency_code: \"USD\",\r\n              value: price,\r\n            },\r\n          },\r\n        ],\r\n      })\r\n      .then((orderID) => {\r\n        setOrderID(orderID);\r\n        return orderID;\r\n      });\r\n  };\r\n\r\n  const onApprove = (data, actions) => {\r\n    return actions.order.capture().then(function (details) {\r\n      const { payer } = details;\r\n      setSuccess(true);\r\n    });\r\n  };\r\n\r\n  const onError = (data, actions) => {\r\n    NotificationManager.error(\"An Error occured with your payment\")\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      NotificationManager.success(\"Payment successful!!\")\r\n      handleUserCreation();\r\n    }\r\n  }, [success]);\r\n\r\n  useEffect(()=>{\r\n    let data={\r\n      email:email\r\n    }\r\n    try {\r\n      fetch(CheckExits, {\r\n        method: \"POST\",\r\n        headers: JSON_HEADER,\r\n        body: JSON.stringify(data),\r\n      }).then((res) => {\r\n        if (res.ok) {\r\n          NotificationManager.warning(\"Account already exists please login\");\r\n         setSubmitEnable(false)\r\n        }else{\r\n          setSubmitEnable(true)\r\n          throw new Error('Something went wrong');\r\n        }\r\n      }).catch(err=>{\r\n\r\n      })\r\n    } catch (error) {\r\n      \r\n    }\r\n    \r\n   \r\n  },[email])\r\n  useEffect(()=>{\r\n    let data={\r\n      mobileNumber:mobile\r\n    }\r\n    if(mobile.length>=10){\r\n      try {\r\n        fetch(CheckExits, {\r\n          method: \"POST\",\r\n          headers: JSON_HEADER,\r\n          body: JSON.stringify(data),\r\n        }).then((res) => {\r\n          if (res.ok) {\r\n            NotificationManager.warning(\"Account already exists please login\");\r\n            setSubmitEnable(false)\r\n          }else{\r\n            setSubmitEnable(true)\r\n            //throw new Error('Something went wrong');\r\n          }\r\n        })\r\n      } catch (error) {\r\n        \r\n      }\r\n     \r\n    }\r\n    \r\n  },[mobile])\r\n\r\n  const handleUserCreation = () => {\r\n\r\n    if (success) {\r\n\r\n    let data = {\r\n      name: name,\r\n      email: email,\r\n      mobileNumber: mobile,\r\n      password: password,\r\n      address: {\r\n        city: city,\r\n        state: state,\r\n        contry: country,\r\n        zipCode: zipcode,\r\n        streetAddress: streetAddress,\r\n      },\r\n      designantion: designation,\r\n      certificate: certificate,\r\n      userType: 1,\r\n      status: 0,\r\n      isEmailVerified: false,\r\n      howfind:howFind\r\n    };\r\n\r\n    /*create community user*/\r\n    //handleNewCommunityUser({name, email, password, userType: 1, id: data._id});\r\n    //handleNewCommunityUser({name, email, mobile, password, city, state, country, zipcode, message: \"\", userType: 0, _id: \"\"});\r\n    \r\n    /*\r\n    memberId = handleNewCommunityUser({name, email, mobile, password, city, state, country, zipcode, message: \"\", userType: 0, _id: \"\"});\r\n    if (memberId != '') {\r\n      handleCommunityDoctor(memberId);\r\n    }*/\r\n\r\n    fetch(UserHandler, {\r\n      method: \"POST\",\r\n      headers: JSON_HEADER,\r\n      body: JSON.stringify(data),\r\n    }).then((res) => {\r\n      if (res.ok) {\r\n        res.json().then((d) => {\r\n          let data = d.data;\r\n          NotificationManager.success(\"Welcome \" + data.name);\r\n          setName(\"\");\r\n          setEmail(\"\");\r\n          setMobile(\"\");\r\n          setPassword(\"\");\r\n          setDesignation(\"\");\r\n          setCountry(\"\");\r\n          setState(\"\");\r\n          setCity(\"\");\r\n          setZipcode(\"\");\r\n          setCertificate(\"\");\r\n          setPlan(\"\");\r\n          setPrices(\"\");\r\n          setStreetAddress(\"\");\r\n          setHowFind(\"\");\r\n          Dispatch(setUserData(data));\r\n          Dispatch(setUserBasic({ uid: data._id, userType: 1, isLogin: true }));\r\n          localStorage.setItem(\"user\", JSON.stringify(data));\r\n          \r\n          //need updates here to accurately capture subscription details\r\n          //console.log(setSubscriptionStatus.details);\r\n\r\n          if (subscriptionDetails.amount==2600) {\r\n            //planId='6512ea7881d7720e2699a999' //annual (local)\r\n            planId='651cc5d78791c4e23da79f27' //annual (live)\r\n          } else {\r\n            //planId='6512ea7881d7720e2699a99b' //monthly (local)\r\n            planId='651cc5d78791c4e23da79f29' //monthly (live)\r\n          }\r\n\r\n          let trans ={\r\n            transId: subscriptionDetails.subscriptionID,\r\n            email:email,\r\n            pid: planId\r\n            //pid:'6512ea7881d7720e2699a999'\r\n            //price: '2600',\r\n            //validity: '360',\r\n          }\r\n          fetch(Historyhandlers,{\r\n            method:\"PUT\",\r\n            headers:JSON_HEADER,\r\n            body:JSON.stringify(trans)\r\n          }).then(res=>{\r\n            if(res.ok){\r\n              navigate(\"/\");\r\n           }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error while making fetch request to Historyhandlers\",error);\r\n          });\r\n          navigate(\"/\");\r\n        });\r\n      }\r\n    });\r\n    closeModal();\r\n  };\r\n}\r\n\r\n  return ( \r\n    //<PayPalScriptProvider options={{ \"client-id\": CLIENT_ID, \"vault\": true}}>\r\n    <PayPalScriptProvider options={initialOptions}>\r\n  <div className=\"w-full mx-auto\">\r\n      <div className=\"flex justify-center my-12\">\r\n        {/* Row */}\r\n        <div className=\"w-full xl:w-3/4 lg:w-11/12 flex\">\r\n          {/* Col */}\r\n          <div\r\n            className=\"w-full h-auto bg-gray-400 hidden lg:block lg:w-5/12 bg-cover rounded-l-lg\"\r\n            style={{\r\n              backgroundImage: `url(${img})`,\r\n            }}\r\n          ></div>\r\n          {/* Col */}\r\n          <div className=\"w-full xl:w-1/2 p-8\">\r\n            <form method=\"post\" action=\"#\" onSubmit={handleSubmit}>\r\n              <h3 className=\"my-4 text-2xl font-semibold text-[#452a72]\">\r\n                Sign Up as a Doctor\r\n              </h3>\r\n              <div>\r\n                <span className=\"text-gray-600 text-sm\">\r\n                  Already have an account? {\" \"}\r\n                </span>\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"text-gray-700 text-sm font-semibold\"\r\n                >\r\n                  Sign in\r\n                </Link>\r\n              </div>\r\n\r\n              <div className=\"grid gap-4 gap-y-3 text-sm grid-cols-1 md:grid-cols-5 mb-4 mt-6\">\r\n                <div className=\"md:col-span-5\">\r\n                  <label\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                    htmlFor=\"Name\"\r\n                  >\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                    className=\"text-sm appearance-none rounded w-full py-2 px-3 text-gray-700 bg-gray-50 leading-tight focus:outline-none focus:shadow-outline h-10 border border-gray-200\"\r\n                    id=\"Name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Your Name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"md:col-span-5\">\r\n                  <label\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                    htmlFor=\"email\"\r\n                  >\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"text-sm appearance-none rounded w-full py-2 px-3 text-gray-700 bg-gray-50 leading-tight focus:outline-none focus:shadow-outline h-10 border border-gray-200\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Your Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"md:col-span-5\">\r\n                  <label\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                    htmlFor=\"mobile\"\r\n                  >\r\n                    Mobile No\r\n                  </label>\r\n                  <input\r\n                    className=\"[appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none transition-all flex items-center  focus:outline-none h-10  mt-1  px-4 w-full bg-gray-50 border border-gray-200\"\r\n                    id=\"mobile\"\r\n                    type=\"number\"\r\n                    placeholder=\"Mobile No\"\r\n                    value={mobile}\r\n                    onChange={(e) => setMobile(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"md:col-span-5 \">\r\n                  <label\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                    htmlFor=\"password\"\r\n                  >\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    className=\"text-sm appearance-none rounded w-full py-2 px-3 text-gray-700 bg-gray-50  leading-tight focus:outline-none focus:shadow-outline h-10 border border-gray-200\"\r\n                    id=\"mobile\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"md:col-span-5 \">\r\n                  <label\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                    htmlFor=\"Designantion\"\r\n                  >\r\n                    Designation\r\n                  </label>\r\n                  <input\r\n                    className=\"text-sm appearance-none rounded w-full py-2 px-3 text-gray-700 bg-gray-50  leading-tight focus:outline-none focus:shadow-outline h-10 border border-gray-200\"\r\n                    id=\"Designantion\"\r\n                    type=\"text\"\r\n                    placeholder=\"Designantion\"\r\n                    value={designation}\r\n                    onChange={(e) => setDesignation(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"md:col-span-5\">\r\n                  <label\r\n                    htmlFor=\"country\"\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                  >\r\n                    Country\r\n                  </label>\r\n                  <select\r\n                    className=\"h-10 bg-gray-50 px-2 text-gray-700 flex border w-full border-gray-200 rounded items-center mt-1 focus:outline-none\"\r\n                    required\r\n                    value={country}\r\n                    onChange={(e) => setCountry(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Country</option>\r\n                    {Country.getAllCountries().map((item, id) => (\r\n                      <option key={id} value={item.isoCode}>\r\n                        {item.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {country && (\r\n                  <div className=\"md:col-span-5\">\r\n                    <label\r\n                      htmlFor=\"state\"\r\n                      className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                    >\r\n                      State / province\r\n                    </label>\r\n                    <select\r\n                      className=\"h-10 bg-gray-50 px-2 text-gray-700 flex border w-full border-gray-200 rounded items-center mt-1 focus:outline-none\"\r\n                      required\r\n                      value={state}\r\n                      onChange={(e) => setState(e.target.value)}\r\n                    >\r\n                      <option value=\"\">State</option>\r\n                      {State.getStatesOfCountry(country).map((item, id) => (\r\n                        <option key={id} value={item.isoCode}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n                {state && (\r\n                  <div className=\"md:col-span-5\">\r\n                    <label\r\n                      htmlFor=\"state\"\r\n                      className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                    >\r\n                      City\r\n                    </label>\r\n                    <select\r\n                      className=\"h-10 px-2 bg-gray-50 text-gray-700 flex border w-full border-gray-200 rounded items-center mt-1 focus:outline-none\"\r\n                      required\r\n                      value={city}\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                      <option value=\"\">City</option>\r\n                      {City.getCitiesOfState(country, state).map((item, id) => (\r\n                        <option key={id} value={item.isoCode}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n                <div className=\"md:col-span-5\">\r\n                  <label\r\n                    htmlFor=\"zipcode\"\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                  >\r\n                    Zipcode\r\n                  </label>\r\n                  <input\r\n                    placeholder=\"Zip Code\"\r\n                    type=\"number\"\r\n                    name=\"zinCode\"\r\n                    required\r\n                    id=\"zipcode\"\r\n                    className=\" focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\r\n                    value={zipcode}\r\n                    onChange={(e) => setZipcode(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"md:col-span-5\">\r\n                  <label\r\n                    htmlFor=\"zipcode\"\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                  >\r\n                    Street address\r\n                  </label>\r\n                  <input\r\n                    placeholder=\"Street Address\"\r\n                    name=\"zinCode\"\r\n                    required\r\n                    id=\"zipcode\"\r\n                    className=\" focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\r\n                    value={streetAddress}\r\n                    onChange={(e) => setStreetAddress(e.target.value)}\r\n                  />\r\n                </div>\r\n              \r\n                <div className=\"md:col-span-5\">\r\n                  <label\r\n                    htmlFor=\"state\"\r\n                    className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                  >\r\n                    Board Certification\r\n                  </label>\r\n                  <select\r\n                    className=\"h-10 px-2 bg-gray-50 text-gray-700 flex border w-full border-gray-200 rounded items-center mt-1 focus:outline-none\"\r\n                    required\r\n                    value={certificate}\r\n                    onChange={(e) => setCertificate(e.target.value)}\r\n                  >\r\n                    <option value=\"Certificate\">Certificate</option>\r\n                    <option value=\"ABPS\">ABPS</option>\r\n                    <option value=\"ASPS\">ABFPRS</option>\r\n                    <option value=\"AAFPRS\">AAFPRS</option>\r\n                    <option value=\"ASOPRS\">ASOPRS</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"md:col-span-5\">\r\n\r\n                  <div className=\"form-check flex justify-center items-center mx-auto\">\r\n                    <input\r\n                      style={{ width: \"15px\", height: \"15px\" }}\r\n                      className=\"form-check-input me-2 \"\r\n                      type=\"checkbox\"\r\n                      value={isTerms}\r\n                      onChange={(e) => setTerms(e.target.checked)}\r\n                      id=\"form2Example3cg\"\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"form2Example3g\">\r\n                      <a href=\"Surgeon Contributor Agreement.pdf\" target=\"_blank\">I agree to all statements in the <u>Contributor Participation Agreement</u></a>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex w-full mt-8 justify-center\">\r\n                \r\n                <button\r\n                  style={{display:!show?\"flex\":\"none\"}}\r\n                  className=\"justify-center w-full bg-[#452a72] hover:bg-transparent text-white hover:text-[#452a72] hover:border hover:border-[#452a72] text-sm py-2 px-4 font-semibold rounded focus:outline-none focus:shadow-outline h-10\"\r\n                  type=\"submit\"\r\n                  onClick={openModal}\r\n                >\r\n                  Subscribe\r\n                </button>\r\n\r\n            <Modal\r\n              open={isModalOpen}\r\n              onClose={closeModal}\r\n              className=\"flex justify-center items-center\"\r\n              >\r\n              <div className=\"bg-white rounded-lg shadow-md p-8 w-1/3 h-1/2 overflow-scroll no-scrollbar\">\r\n              <div className=\"modal-content\">\r\n                <SubscriptionList handleSubscription={handleSubscription} closeModal={closeModal} />\r\n              </div>\r\n              </div>\r\n            </Modal>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, {useState} from 'react';\nimport { PayPalScriptProvider, PayPalButtons } from '@paypal/react-paypal-js';\nimport { Modal } from \"@mui/material\";\nimport { CLIENT_ID } from \"../utils/Const\";\nimport { NotificationManager } from 'react-notifications';\n//import { useState } from 'react';\n\nconst SubscriptionOption = ({planId, handleSubscription, closeModal}) => {\n  const [success, setSuccess] = useState(false);\n  //const [subscriptionId, setSubscriptionId, setCreatedEmail, setCreatedAmount, setCreatedTime] = useState(null);\n  \n  const handleSubscriptionSuccess = (details) => {\n    const {\n      subscriptionID,\n      payerID,\n      payerName,\n      payerEmail,\n      amount,\n      createTime,\n      updateTime,\n      links,\n    } = details;\n    //handleUserCreation();\n    \n    setSuccess(true);\n\n    closeModal();\n\n    if (handleSubscription) {\n      handleSubscription(details);\n    }\n\n    //closeModal();\n  }\n\n  return (\n\n      <PayPalButtons\n        style={{\n          shape: 'pill',\n          color: 'gold',\n          layout: 'vertical',\n          label: 'subscribe'\n        }}\n        createSubscription={(data, actions) => {\n          return actions.subscription.create({\n            'plan_id': planId, \n            'userAction': \"SUBSCRIBE_NOW\"\n          })\n        }}\n        onApprove={handleSubscriptionSuccess}\n        onError={(error) => {\n          NotificationManager.error('Subscription failed: ' + error.message);\n        }}\n      />\n  );\n};\n\nexport default SubscriptionOption;","import React, { useEffect, useState } from 'react';\nimport SubscriptionOption from './SubscriptionOption';\nimport { CLIENT_ID, ANNUAL_PLAN, MONTHLY_PLAN } from '../utils/Const';\n\nfunction SubscriptionList({ handleSubscription, closeModal }) {\n  const [paypalLoaded, setPaypalLoaded] = useState(false);\n\n  useEffect(() => {\n    // Check if the PayPal script is already loaded\n    if (window.paypal) {\n      setPaypalLoaded(true);\n    } else {\n      // Load the PayPal SDK script dynamically when the component is mounted\n      const script = document.createElement('script');\n      script.src = `https://www.paypal.com/sdk/js?client-id=${CLIENT_ID}`;\n      script.async = true;\n\n      script.onload = () => {\n        // PayPal SDK is loaded, set the flag to true\n        setPaypalLoaded(true);\n      };\n\n      document.body.appendChild(script);\n    }\n\n    return () => {\n      // No need to remove the script, as it will be reused if the component is remounted\n    };\n  }, []);\n\n  const handleSubscriptionSuccess = (details) => {\n    // Subscription is successful\n    handleSubscription(details);\n  };\n\n  return (\n    <div>\n      <h2 style={{ textAlign: 'center' }}>Choose a Subscription:</h2>\n      <p></p>\n      {paypalLoaded ? (\n        <div className=\"subscription-option\" style={{ textAlign: 'center' }}>\n          <h3>Monthly Subscription</h3>\n          <p>$225 USD per month</p>\n          <SubscriptionOption planId={MONTHLY_PLAN} handleSubscription={handleSubscription} closeModal={closeModal} />\n        </div>\n      ) : null}\n\n      {paypalLoaded ? (\n        <div className=\"subscription-option\" style={{ textAlign: 'center' }}>\n          <h3>Annual Subscription</h3>\n          <p>$2600 USD per year</p>\n          <SubscriptionOption planId={ANNUAL_PLAN} handleSubscription={handleSubscription} closeModal={closeModal}/>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default SubscriptionList;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","mobile","setMobile","_useState7","_useState8","password","setPassword","_useState9","_useState10","designation","setDesignation","_useState11","_useState12","country","setCountry","_useState13","_useState14","state","setState","_useState15","_useState16","city","setCity","_useState17","_useState18","zipcode","setZipcode","_useState19","_useState20","certificate","setCertificate","_useState21","_useState22","streetAddress","setStreetAddress","_useState23","_useState24","howFind","setHowFind","_useState25","_useState26","setPlan","_useState27","Array","_useState28","setPrices","_useState29","_useState30","isTerms","setTerms","Dispatch","useDispatch","navigate","useNavigate","console","log","_useState31","_useState32","img","setImg","MasterData","useSelector","handleMasterData","_useState33","handleUserBasicData","_useState34","show","setShow","_useState35","_useState36","success","setSuccess","_useState37","_useState38","_useState39","_useState40","submitEnable","setSubmitEnable","_useState41","_useState42","setSubscriptionStatus","_useState43","_useState44","subscriptionDetails","setSubscriptionDetails","planId","initialOptions","CLIENT_ID","_useState45","_useState46","isModalOpen","setIsModalOpen","closeModal","useLayoutEffect","signupData","FILE_URL","pro","prices","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","NotificationManager","warning","abrupt","stop","_x","apply","arguments","useEffect","handleUserCreation","data","fetch","CheckExits","method","headers","JSON_HEADER","body","JSON","stringify","then","res","ok","Error","catch","err","error","mobileNumber","length","address","contry","zipCode","designantion","userType","status","isEmailVerified","howfind","UserHandler","json","d","setUserData","setUserBasic","uid","_id","isLogin","localStorage","setItem","amount","trans","transId","subscriptionID","pid","Historyhandlers","_jsx","PayPalScriptProvider","options","children","className","_jsxs","style","backgroundImage","concat","action","onSubmit","Link","to","htmlFor","id","type","placeholder","value","onChange","target","required","Country","getAllCountries","map","item","isoCode","State","City","getCitiesOfState","width","height","checked","href","display","onClick","Modal","open","onClose","SubscriptionList","handleSubscription","details","PayPalButtons","shape","color","layout","label","createSubscription","actions","subscription","create","onApprove","payerID","payerName","payerEmail","createTime","updateTime","links","onError","message","paypalLoaded","setPaypalLoaded","window","paypal","script","document","createElement","src","async","onload","appendChild","textAlign","SubscriptionOption","MONTHLY_PLAN","ANNUAL_PLAN"],"sourceRoot":""}