{"version":3,"file":"static/js/877.d42de5fb.chunk.js","mappings":"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","sources":["DoctorDashboard/Component/MyQuickNotes.js","DoctorDashboard/QuickNotes.js"],"sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { TrashIcon, PencilIcon } from '@heroicons/react/24/solid';\r\nimport { IconButton, Tooltip } from '@material-tailwind/react';\r\nimport { useNavigate } from 'react-router';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@mui/material'; // Import Material-UI components\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DeleteNotes, FILE_URL, FormatDate, GetNotesByUser } from '../../utils/Const';\r\nimport { setNotes } from '../../Redux/Actions';\r\nimport { NotificationManager } from 'react-notifications';\r\n\r\nconst STATUS={\r\n    0:\"Pending\",\r\n    1:\"Confirmed\",\r\n    2:\"Rejected\"\r\n}\r\nconst MyQuickNotes = () => {\r\n    const Basic = useSelector(state=>state.handleUserBasicData);\r\n    const Notes = useSelector(state=>state.Notes);\r\n    const Dispatch = useDispatch();\r\n    const [notes, setNotesData] = useState([]);\r\n\r\n    const [selectedNote, setSelectedNote] = useState(\"\");\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n    const navigate = useNavigate()\r\n\r\n    useLayoutEffect(()=>{\r\n        if(Notes.length>0){\r\n            setNotesData(Notes)\r\n        }else{\r\n            let data= {\r\n                uid:Basic.uid\r\n            }\r\n            GetNotesByUser(data).then(d=>{\r\n                if(d!=null){\r\n                    Dispatch(setNotes(d.data));\r\n                }else{\r\n                    setNotesData([])\r\n                }\r\n            })\r\n        }\r\n    },[Notes])\r\n\r\n\r\n    const handleDltNote = (id) => { \r\n        DeleteNotes(id).then(d=>{\r\n            NotificationManager.success(\"Deleted\")\r\n            let data= {\r\n                uid:Basic.uid\r\n            }\r\n            GetNotesByUser(data).then(d=>{\r\n                if(d!=null){\r\n                    Dispatch(setNotes(d.data));\r\n                }else{\r\n                    setNotesData([])\r\n                }\r\n            })\r\n        })\r\n    };\r\n\r\n    const handleEditNote = (id) => {\r\n        navigate(`/edit/${id}`)\r\n\r\n    };\r\n    const handleToggleDialog = () => {\r\n        setIsDialogOpen(!isDialogOpen);\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-white shadow px-4 md:px-10 pt-4 md:pt-7 pb-5 overflow-y-auto\">\r\n            <table className=\"w-full whitespace-nowrap\">\r\n                <thead>\r\n                    <tr className=\"h-16 w-full text-sm leading-none text-gray-800\">\r\n                        <th className=\"font-normal text-left pl-4\">Quick Note</th>\r\n                        <th className=\"font-normal text-left pl-12\">Description</th>\r\n                        {/* <th className=\"font-normal text-left pl-12\">Status</th> */}\r\n                        <th className=\"font-normal text-left pl-12\">Created At</th>\r\n                        <th className=\"font-normal text-left pl-12\">Updated At</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"w-full\">\r\n                    {notes.map((note) => (\r\n                        <tr\r\n                            key={note._id}\r\n                            className=\"h-20 text-sm leading-none text-gray-800 bg-white hover:bg-gray-100 border-b border-t border-gray-100\"\r\n                        >\r\n                            <td className=\"pl-4 cursor-pointer\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"w-10 h-10\">\r\n                                        <LazyLoadImage\r\n                                            effect=\"blur\"\r\n                                            width=\"100%\"\r\n                                            height=\"100%\"\r\n                                            className=\"w-full h-full\"\r\n                                            src={FILE_URL+note.imgUrl}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"pl-4\">\r\n                                        <p className=\"font-medium\">{note.title}</p>\r\n                                        <p className=\"text-xs leading-3 text-gray-600 pt-2\">\r\n                                            {note.cateName}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td className=\"px-7 2xl:px-0 mt-4 flex justify-center items-center\">\r\n                                <p className=\"font-medium\">{note.para.slice(0, 15)}...</p>\r\n                                <Tooltip content=\"View Description\">\r\n                                    <IconButton\r\n                                        variant=\"text\"\r\n                                        color=\"blue-gray\"\r\n                                        onClick={() => {\r\n                                            setSelectedNote(note._id);\r\n                                            handleToggleDialog();\r\n                                        }}\r\n                                    >\r\n                                        <InfoIcon className=\"h-5 w-5\" />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </td>\r\n                            {/* <td className=\"pl-12\">\r\n                                <p className=\"text-sm font-medium leading-none text-gray-800\">\r\n                                    {STATUS[note.status]}\r\n                                </p>\r\n                            </td> */}\r\n\r\n                            <td className=\"pl-12\">\r\n                                <p className=\"text-sm font-medium leading-none text-gray-800\">\r\n                                    {FormatDate(note.createdAt)}\r\n                                </p>\r\n                            </td>\r\n                            <td className=\"pl-12\">\r\n                                <p className=\"text-sm font-medium leading-none text-gray-800\">\r\n                                    {FormatDate(note.updatedAt)}\r\n                                </p>\r\n                            </td>\r\n                            <td className=\"px-7 2xl:px-0\">\r\n                                {/* <Tooltip content=\"Edit Post\">\r\n                                    <IconButton\r\n                                        variant=\"text\"\r\n                                        color=\"blue-gray\"\r\n                                        onClick={() => handleEditNote(note._id)}\r\n                                    >\r\n                                        <PencilIcon className=\"h-5 w-5\" />\r\n                                    </IconButton>\r\n                                </Tooltip> */}\r\n                                {/* <Tooltip content=\"Delete Post\">\r\n                                    <IconButton\r\n                                        variant=\"text\"\r\n                                        color=\"blue-gray\"\r\n                                        onClick={() => handleDltNote(note._id)}\r\n                                    >\r\n                                        <TrashIcon className=\"h-5 w-5\" />\r\n                                    </IconButton>\r\n                                </Tooltip> */}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <Dialog open={isDialogOpen} onClose={handleToggleDialog}>\r\n                <DialogTitle>{selectedNote && notes.find(note => note._id === selectedNote).title}</DialogTitle>\r\n                <DialogContent>\r\n                    {selectedNote && notes.find(note => note._id === selectedNote).para}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleToggleDialog}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default MyQuickNotes","\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router'\r\nimport MyQuickNotes from \"./Component/MyQuickNotes\";\r\n\r\n\r\nfunction QuickNotes() {\r\n    const navigate = useNavigate()\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"w-full px-0 md:px-6 py-2\">\r\n                <div className=\"px-4 md:px-10 py-4 md:py-7 bg-gray-100 rounded-tl-lg rounded-tr-lg\">\r\n                    <div className=\"sm:flex items-center justify-between\">\r\n                        <p className=\"text-base sm:text-lg md:text-xl lg:text-2xl font-bold leading-normal text-gray-800\">Quick Notes</p>\r\n                        <div>\r\n                            <button onClick={() => navigate(\"create\")} className=\"inline-flex text-white sm:ml-3 mt-4 sm:mt-0 items-start justify-start px-6 py-3 bg-[#452a72] hover:bg-transparent border border-[#452a72] hover:text-[#452a72] focus:outline-none rounded\">\r\n                                <p className=\"text-sm font-medium leading-none\">Create Quick Notes</p>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <MyQuickNotes/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QuickNotes;\r\n\r\n"],"names":["Basic","useSelector","state","handleUserBasicData","Notes","Dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","notes","setNotesData","_useState3","_useState4","selectedNote","setSelectedNote","_useState5","_useState6","isDialogOpen","setIsDialogOpen","useNavigate","useLayoutEffect","length","data","uid","GetNotesByUser","then","d","setNotes","handleToggleDialog","_jsxs","className","children","_jsx","map","note","LazyLoadImage","effect","width","height","src","FILE_URL","imgUrl","title","cateName","para","slice","Tooltip","content","IconButton","variant","color","onClick","_id","InfoIcon","FormatDate","createdAt","updatedAt","Dialog","open","onClose","DialogTitle","find","DialogContent","DialogActions","Button","navigate","_Fragment","MyQuickNotes"],"sourceRoot":""}