{"version":3,"file":"static/js/795.beec477d.chunk.js","mappings":"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","sources":["Pages/FreeRegister.js","utils/CreateCommunityUserUtil.js"],"sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\r\nimport Img1 from \"../Images/Doctors/article3.jpeg\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport { FILE_URL, JSON_HEADER, UserHandler } from \"../utils/Const\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { setUserBasic, setUserData } from \"../Redux/Actions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nimport { handleNewCommunityUser } from \"../utils/CreateCommunityUserUtil\";\r\n\r\nconst FreeRegister = () => {\r\n    const [country, setCountry] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [mobile, setMobile] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [zipcode, setZipcode] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const Dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    const [img, setImg] = useState('');\r\n    const MasterData = useSelector(state=>state.handleMasterData);\r\n  \r\n    useLayoutEffect(()=>{\r\n      if(MasterData.signupData!=null){\r\n        setImg(FILE_URL+MasterData.signupData.login)\r\n      }\r\n    },[MasterData])\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            name: name,\r\n            email: email,\r\n            mobileNumber: mobile,\r\n            password: password,\r\n            address: {\r\n              city: city,\r\n              state: state,\r\n              contry: country,\r\n              zipCode: zipcode,\r\n            },\r\n            aboutUser: message,\r\n            userType: 0,\r\n            status: 1,\r\n          };\r\n      \r\n          /*create community user*/\r\n          handleNewCommunityUser({name, email, mobile, password, city, state, country, zipcode, message, userType: 0, _id: data._id});\r\n          //handleNewCommunityUser({name, email, password, userType: 0, _id: data._id});\r\n\r\n          fetch(UserHandler, {\r\n            method: \"POST\",\r\n            headers: JSON_HEADER,\r\n            body: JSON.stringify(data),\r\n          }).then((res) => {\r\n            if (res.ok) {\r\n              res.json().then((d) => {\r\n                let data = d.data;\r\n                setName(\"\");\r\n                setEmail(\"\");\r\n                setMobile(\"\");\r\n                setPassword(\"\");\r\n                setMessage(\"\")\r\n                setCountry(\"\");\r\n                setState(\"\");\r\n                setCity(\"\");\r\n                setZipcode(\"\");\r\n                Dispatch(setUserData(data));\r\n                Dispatch(setUserBasic({uid:data._id,userType:0,isLogin:true}));\r\n                NotificationManager.success(\"Signup success welcome!\")\r\n                navigate(\"/\");\r\n                localStorage.setItem(\"user\",JSON.stringify(data))\r\n              });\r\n            }\r\n          });\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full mx-auto\">\r\n            <div className=\"flex justify-center my-12\">\r\n                <div className=\"w-full xl:w-3/4 lg:w-11/12 flex\">\r\n                    <div\r\n                        className=\"w-full h-auto bg-gray-400 hidden lg:block lg:w-5/12 bg-cover rounded-l-lg\"\r\n                        style={{\r\n                            backgroundImage: `url(${img})`,\r\n                        }}\r\n                    ></div>\r\n                    <div className=\"w-full xl:w-1/2 p-8\">\r\n                        <form method=\"post\" action=\"#\" onSubmit={handleSubmit}>\r\n                            <h3 className=\"my-4 text-2xl font-semibold text-[#452a72]\">\r\n                                Free Sign Up as a Member\r\n                            </h3>\r\n                            <div>\r\n                                <span className=\"text-gray-600 text-sm\">\r\n                                    Already have an account? {\" \"} \r\n                                </span>\r\n                                <Link to=\"/login\" className=\"text-gray-700 text-sm font-semibold\">\r\n                                    Sign in\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"grid gap-4 gap-y-3 text-sm grid-cols-1 md:grid-cols-5 mb-4 mt-6\">\r\n                                <div className=\"md:col-span-5\">\r\n                                    <label\r\n                                        className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                        htmlFor=\"Name\"\r\n                                    >\r\n                                        Name\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"text-sm appearance-none rounded w-full py-2 px-3 text-gray-700 bg-gray-50 leading-tight focus:outline-none focus:shadow-outline h-10 border border-gray-200\"\r\n                                        id=\"Name\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Your Name\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"md:col-span-5\">\r\n                                    <label\r\n                                        className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                        htmlFor=\"email\"\r\n                                    >\r\n                                        Email\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"text-sm appearance-none rounded w-full py-2 px-3 text-gray-700 bg-gray-50 leading-tight focus:outline-none focus:shadow-outline h-10 border border-gray-200\"\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Your Email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"md:col-span-5\">\r\n                                    <label\r\n                                        className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                        htmlFor=\"mobile\"\r\n                                    >\r\n                                        Mobile No\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"[appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none transition-all flex items-center  focus:outline-none h-10  mt-1  px-4 w-full bg-gray-50 border border-gray-200\"\r\n                                        id=\"mobile\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Mobile No\"\r\n                                        value={mobile}\r\n                                        onChange={(e) => setMobile(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"md:col-span-5\">\r\n                                    <label\r\n                                        className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                        htmlFor=\"password\"\r\n                                    >\r\n                                        Password\r\n                                    </label>\r\n                                    <input\r\n                                        className=\"text-sm appearance-none rounded w-full py-2 px-3 text-gray-700 bg-gray-50  leading-tight focus:outline-none focus:shadow-outline h-10 border border-gray-200\"\r\n                                        id=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"md:col-span-5\">\r\n                                    <label\r\n                                        htmlFor=\"country\"\r\n                                        className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                    >\r\n                                        Country\r\n                                    </label>\r\n                                    <select\r\n                                        className=\"h-10 bg-gray-50 px-2 text-gray-700 flex border w-full border-gray-200 rounded items-center mt-1 focus:outline-none\"\r\n                                        required\r\n                                        value={country}\r\n                                        onChange={(e) => setCountry(e.target.value)}\r\n                                    >\r\n                                        <option value=\"\">Country</option>\r\n                                        {Country &&\r\n                                            Country.getAllCountries().map((item, id) => (\r\n                                                <option key={id} value={item.isoCode}>\r\n                                                    {item.name}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                </div>\r\n                                {country && (\r\n                                    <div className=\"md:col-span-3\">\r\n                                        <label\r\n                                            htmlFor=\"state\"\r\n                                            className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                        >\r\n                                            State / province\r\n                                        </label>\r\n                                        <select\r\n                                            className=\"h-10 bg-gray-50 px-2 text-gray-700 flex border w-full border-gray-200 rounded items-center mt-1 focus:outline-none\"\r\n                                            required\r\n                                            value={state}\r\n                                            onChange={(e) => setState(e.target.value)}\r\n                                        >\r\n                                            <option value=\"\">State</option>\r\n                                            {State &&\r\n                                                State.getStatesOfCountry(country).map((item, id) => (\r\n                                                    <option key={id} value={item.isoCode}>\r\n                                                        {item.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                                {state && (\r\n                                    <div className=\"md:col-span-2\">\r\n                                        <label\r\n                                            htmlFor=\"state\"\r\n                                            className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                        >\r\n                                            City\r\n                                        </label>\r\n                                        <select\r\n                                            className=\"h-10 px-2 bg-gray-50 text-gray-700 flex border w-full border-gray-200 rounded items-center mt-1 focus:outline-none\"\r\n                                            required\r\n                                            value={city}\r\n                                            onChange={(e) => setCity(e.target.value)}\r\n                                        >\r\n                                            <option value=\"\">City</option>\r\n                                            {City &&\r\n                                                City.getCitiesOfState(country, state).map((item, id) => (\r\n                                                    <option key={id} value={item.isoCode}>\r\n                                                        {item.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </select>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"md:col-span-5\">\r\n                                    <label\r\n                                        htmlFor=\"zipcode\"\r\n                                        className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                    >\r\n                                        Zipcode\r\n                                    </label>\r\n                                    <input\r\n\r\n                                        className=\"focus:outline-none [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50\"\r\n                                        id=\"zipcode\"\r\n                                        type=\"number\"\r\n                                        placeholder=\"Zip Code\"\r\n                                        value={zipcode}\r\n                                        onChange={(e) => setZipcode(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"md:col-span-5\">\r\n                                    <label\r\n                                        htmlFor=\"message\"\r\n                                        className=\"block text-gray-700 text-sm font-semibold mb-2\"\r\n                                    >\r\n                                        Write about yourself\r\n                                    </label>\r\n                                    <textarea\r\n                                        name=\"message\"\r\n                                        id=\"message\"\r\n                                        placeholder=\"Your Message\"\r\n                                        className=\"w-full mb-4 px-4 py-3 border-2 text-gray-700 placeholder:text-gray-700 rounded-md outline-none h-32 focus:ring-4 border-gray-300  ring-gray-100  focus:outline-none\"\r\n                                        value={message}\r\n                                        onChange={(e) => setMessage(e.target.value)}\r\n                                    ></textarea>\r\n                                    <div class=\"form-check flex justify-center items-center\">\r\n\r\n                                        <input style={{ width: \"15px\", height: \"15px\" }} class=\"form-check-input me-2 \" type=\"checkbox\" value=\"\" id=\"form2Example3cg\" />\r\n                                        <label class=\"form-check-label\" for=\"form2Example3g\">\r\n                                            I agree all statements in <Link to=\"/privacyPolicy\" className=\"text-body\"><u>Terms of service</u></Link>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex w-full mt-8\">\r\n                                <button\r\n                                    className=\"w-full bg-[#452a72] hover:bg-transparent hover:text-[#452a72] hover:border hover:border-[#452a72] text-white text-sm py-2 px-4 font-semibold rounded focus:outline-none focus:shadow-outline h-10\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Sign up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FreeRegister;\r\n","import { NotificationManager } from \"react-notifications\";\nimport { CreateCommunityUser, JSON_HEADER } from \"./Const\";\n\nconst formatUserData = (data) => {\n    //const {name, email, password, userType} = data;\n    const {name, email, mobile, password, city, state, country, zipcode, message, userType, _id} = data;\n    \n    //const accountType = (plan)? \"Doctors\" : \"Humhub\"; // not sure what the non-docot account type should be //userType=0 for Users, userType=1 for Doctors\n    let accountType = 'Users';\n    let visibility = 1;\n    const firstname = name.split(' ').slice(0, -1).join(' ');\n    const lastname = name.split(' ').slice(-1).join(' ');\n    \n    if (userType == 1) {\n      accountType = \"Doctors\"\n      visibility = 0\n    };\n    \n    return  data = {\n      account: {\n        username: email, //do we have username data //username is just a string, so we can use name\n        email,\n        visibility: 0,\n        status: 1,\n        tagsField : [\n            accountType //default to Users Group. Only create an account in Doctors group if userType=1\n        ],\n        //authclient: \"local\",\n        authclient: \"YBS\",\n        authclient_id: _id,\n      },\n      profile: {\n        firstname, //name fields are all lowercase....\n        lastname,\n        zip: zipcode, \n        city,\n        state,\n        country,\n        about: message,\n        mobile,\n      },\n      password: {\n        newPassword: password,\n        mustChangePassword: false\n      }\n    };\n}\n\nexport const handleNewCommunityUser = (data) => {\n    fetch(CreateCommunityUser, {\n      method: \"POST\",\n      headers: JSON_HEADER,\n      body: JSON.stringify(formatUserData(data)),\n    }).then((res) => {\n      if (res.ok) {\n        res.json()\n        .then(res => res)\n        .catch((err) => {\n          NotificationManager.error(\"An Error creating your account with the community site.\")\n        })\n      }\n    });\n  };"],"names":["_useState","useState","_useState2","_slicedToArray","country","setCountry","_useState3","_useState4","state","setState","_useState5","_useState6","city","setCity","_useState7","_useState8","name","setName","_useState9","_useState10","email","setEmail","_useState11","_useState12","mobile","setMobile","_useState13","_useState14","password","setPassword","_useState15","_useState16","zipcode","setZipcode","_useState17","_useState18","message","setMessage","Dispatch","useDispatch","navigate","useNavigate","_useState19","_useState20","img","setImg","MasterData","useSelector","handleMasterData","useLayoutEffect","signupData","FILE_URL","login","_jsx","className","children","_jsxs","style","backgroundImage","concat","method","action","onSubmit","e","preventDefault","data","mobileNumber","address","contry","zipCode","aboutUser","userType","status","handleNewCommunityUser","_id","fetch","UserHandler","headers","JSON_HEADER","body","JSON","stringify","then","res","ok","json","d","setUserData","setUserBasic","uid","isLogin","NotificationManager","success","localStorage","setItem","Link","to","htmlFor","id","type","placeholder","value","onChange","target","required","Country","getAllCountries","map","item","isoCode","State","City","getCitiesOfState","class","width","height","for","formatUserData","_data","accountType","account","username","visibility","tagsField","authclient","authclient_id","profile","firstname","split","slice","join","lastname","zip","about","newPassword","mustChangePassword","CreateCommunityUser","catch","err","error"],"sourceRoot":""}