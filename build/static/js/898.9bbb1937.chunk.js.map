{"version":3,"file":"static/js/898.9bbb1937.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/solid/esm/PencilIcon.js","DoctorDashboard/Component/PostTable.js","DoctorDashboard/PostPage.js"],"sourcesContent":["import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-12.15 12.15a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32L19.513 8.2z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PencilIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport { TrashIcon, PencilIcon } from '@heroicons/react/24/solid';\r\nimport { IconButton, Tooltip } from '@material-tailwind/react';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst PostTable = () => {\r\n    const [show, setShow] = useState(null);\r\n    const navigate = useNavigate()\r\n\r\n    const handleDltPost = () => { };\r\n\r\n    const handleEditPost = (id) => {\r\n        navigate(`${id}/edit`)\r\n\r\n    };\r\n\r\n    // Array of post data\r\n    const posts = [\r\n        {\r\n            id: 1,\r\n            imageSrc: 'https://cdn.tuk.dev/assets/templates/olympus/projects.png',\r\n            title: 'UX Design & Visual Strategy',\r\n            category: 'Category 1',\r\n            status: 'Pending',\r\n            description: 'Heart disease a...',\r\n            createdAt: '20/03/23',\r\n            updatedAt: '23/03/23',\r\n        },\r\n        {\r\n            id: 2,\r\n            imageSrc: 'https://cdn.tuk.dev/assets/templates/olympus/projects(1).png',\r\n            title: 'Title',\r\n            category: 'Category 2',\r\n            status: 'Confirmed',\r\n            description: 'In this world tod...',\r\n            createdAt: '20/03/23',\r\n            updatedAt: '23/03/23',\r\n        },\r\n        {\r\n            id: 3,\r\n            imageSrc: 'https://cdn.tuk.dev/assets/templates/olympus/projects(1).png',\r\n            title: 'Title',\r\n            category: 'Category 2',\r\n            status: 'Rejected',\r\n            description: 'In this world tod...',\r\n            createdAt: '20/03/23',\r\n            updatedAt: '23/03/23',\r\n        },\r\n        // Add more post objects as needed\r\n    ];\r\n\r\n    return (\r\n        <div className=\"bg-white shadow px-4 md:px-10 pt-4 md:pt-7 pb-5 overflow-y-auto\">\r\n            <table className=\"w-full whitespace-nowrap\">\r\n                <thead>\r\n                    <tr className=\"h-16 w-full text-sm leading-none text-gray-800\">\r\n                        <th className=\"font-normal text-left pl-4\">Posts</th>\r\n                        <th className=\"font-normal text-left pl-12\">Status</th>\r\n                        <th className=\"font-normal text-left pl-12\">Description</th>\r\n                        <th className=\"font-normal text-left pl-12\">Created At</th>\r\n                        <th className=\"font-normal text-left pl-12\">Updated At</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"w-full\">\r\n                    {posts.map((post) => (\r\n                        <tr\r\n                            key={post.id}\r\n                            className=\"h-20 text-sm leading-none text-gray-800 bg-white hover:bg-gray-100 border-b border-t border-gray-100\"\r\n                        >\r\n                            <td className=\"pl-4 cursor-pointer\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"w-10 h-10\">\r\n                                        <LazyLoadImage\r\n                                            effect=\"blur\"\r\n                                            width=\"100%\"\r\n                                            height=\"100%\"\r\n                                            className=\"w-full h-full\"\r\n                                            src={post.imageSrc}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"pl-4\">\r\n                                        <p className=\"font-medium\">{post.title}</p>\r\n                                        <p className=\"text-xs leading-3 text-gray-600 pt-2\">\r\n                                            {post.category}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td className=\"pl-12\">\r\n                                <p className=\"text-sm font-medium leading-none text-gray-800\">\r\n                                    {post.status}\r\n                                </p>\r\n                            </td>\r\n                            <td className=\"pl-12\">\r\n                                <p className=\"text-sm font-medium leading-none text-gray-800\">\r\n                                    {post.description}\r\n                                </p>\r\n                            </td>\r\n                            <td className=\"pl-12\">\r\n                                <p className=\"text-sm font-medium leading-none text-gray-800\">\r\n                                    {post.createdAt}\r\n                                </p>\r\n                            </td>\r\n                            <td className=\"pl-12\">\r\n                                <p className=\"text-sm font-medium leading-none text-gray-800\">\r\n                                    {post.updatedAt}\r\n                                </p>\r\n                            </td>\r\n                            <td className=\"px-7 2xl:px-0\">\r\n                                <Tooltip content=\"Edit Post\">\r\n                                    <IconButton\r\n                                        variant=\"text\"\r\n                                        color=\"blue-gray\"\r\n                                        onClick={() => handleEditPost(post.id)}\r\n                                    >\r\n                                        <PencilIcon className=\"h-5 w-5\" />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Tooltip content=\"Delete Post\">\r\n                                    <IconButton\r\n                                        variant=\"text\"\r\n                                        color=\"blue-gray\"\r\n                                        onClick={() => handleDltPost(post.id)}\r\n                                    >\r\n                                        <TrashIcon className=\"h-5 w-5\" />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostTable;\r\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport PostTable from \"./Component/PostTable\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport moment from \"moment\";\r\n\r\nfunction PostPage() {\r\n  const navigate = useNavigate();\r\n  const UserData = useSelector((state) => state.handleUserData);\r\n\r\n  const [isExpired, setExpired] = useState(false);\r\n  const [isPost, setPostAvilable] = useState(false);\r\n  useLayoutEffect(() => {\r\n    if (UserData != null) {\r\n        if(UserData.isPlanExpired!=null){\r\n            setExpired(UserData.isPlanExpired);\r\n        }else{\r\n            setExpired(true);\r\n        }\r\n        if(UserData.postDate!=null){\r\n            handleEligbility(UserData.postDate);\r\n        }else{\r\n            setPostAvilable(true)\r\n        }\r\n    }\r\n  }, [UserData]);\r\n\r\n  const handleEligbility = (date) => {\r\n    const today = moment().startOf(\"day\");\r\n    const selectedDate = moment(date).startOf(\"day\");\r\n\r\n    setPostAvilable(selectedDate.isBefore(today) && !selectedDate.isSame(today, \"day\"))\r\n  };\r\n\r\n  const handleNewPost=()=>{\r\n\r\n    if(isExpired){\r\n        NotificationManager.error(\"Package Expired\");\r\n        return\r\n    }\r\n    if(!isPost){\r\n        NotificationManager.error(\"No post available for today\");\r\n        return\r\n    }\r\n    navigate(\"create\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full px-0 md:px-6 py-2\">\r\n        <div className=\"px-4 md:px-10 py-4 md:py-7 bg-gray-100 rounded-tl-lg rounded-tr-lg\">\r\n          <div className=\"sm:flex items-center justify-between\">\r\n            <p className=\"text-base sm:text-lg md:text-xl lg:text-2xl font-bold leading-normal text-gray-800\">\r\n              Post\r\n            </p>\r\n            <div>\r\n              <button\r\n                onClick={handleNewPost}\r\n                className=\"inline-flex text-white sm:ml-3 mt-4 sm:mt-0 items-start justify-start px-6 py-3 bg-[#452a72] hover:bg-transparent border border-[#452a72] hover:text-[#452a72] focus:outline-none rounded\"\r\n              >\r\n                <p className=\"text-sm font-medium leading-none\">\r\n                  Create New Post\r\n                </p>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <PostTable />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostPage;\r\n"],"names":["React","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","viewBox","fill","ref","id","d","_useState","useState","_useState2","_slicedToArray","navigate","useNavigate","_jsx","className","children","_jsxs","imageSrc","category","status","description","createdAt","updatedAt","map","post","LazyLoadImage","effect","width","height","src","Tooltip","content","IconButton","variant","color","onClick","concat","PencilIcon","TrashIcon","UserData","useSelector","state","handleUserData","isExpired","setExpired","_useState3","_useState4","isPost","setPostAvilable","useLayoutEffect","isPlanExpired","postDate","handleEligbility","date","today","moment","startOf","selectedDate","isBefore","isSame","_Fragment","NotificationManager","error","PostTable"],"sourceRoot":""}